on:
  push:
    branches:
      - master

jobs:

  detect-changes:
    runs-on: ubuntu-latest
    outputs: 
      webapp: ${{ steps.filter.outputs.webapp }}
      api: ${{ steps.filter.outputs.api }}
      auth: ${{ steps.filter.outputs.auth }}
      database: ${{ steps.filter.outputs.database }}
      reverse-proxy: ${{ steps.filter.outputs.reverse-proxy }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            webapp:
              - 'webapp/**'
            api:
              - 'api/**'
            auth:
              - 'auth/**'
            database:
              - 'database/**'
            reverse-proxy:
              - 'reverse-proxy/**'
            deployment:
              - 'deployment/**'

  build-webapp:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.webapp == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Build webapp
        run: docker build --build-context shared=./shared/ --target prod -t sonddr-webapp ./webapp/
      - name: Save .tar
        run: docker save sonddr-webapp -o ./sonddr-webapp.tar
      - name: Store artifact
        uses: actions/upload-artifact@v4
        with: 
          name: webapp-image
          path: ./sonddr-webapp.tar

  build-api:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.api == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Build api
        run: docker build --build-context shared=./shared/ -t sonddr-api ./api/
      - name: Save .tar
        run: docker save sonddr-api -o ./sonddr-api.tar
      - name: Store artifact
        uses: actions/upload-artifact@v4
        with: 
          name: api-image
          path: ./sonddr-api.tar

  build-auth:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.auth == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Build auth
        run: docker build --target prod -t sonddr-auth ./auth/
      - name: Save .tar
        run: docker save sonddr-auth -o ./sonddr-auth.tar
      - name: Store artifact
        uses: actions/upload-artifact@v4
        with: 
          name: auth-image
          path: ./sonddr-auth.tar

  build-database:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.database == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Build database
        run: docker build -t sonddr-database ./database/database/
      - name: Save .tar
        run: docker save sonddr-database -o ./sonddr-database.tar
      - name: Store artifact
        uses: actions/upload-artifact@v4
        with: 
          name: database-image
          path: ./sonddr-database.tar

  build-reverse-proxy:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.reverse-proxy == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Build reverse-proxy
        run: docker build -t sonddr-reverse-proxy ./reverse-proxy/
      - name: Save .tar
        run: docker save sonddr-reverse-proxy -o ./sonddr-reverse-proxy.tar
      - name: Store artifact
        uses: actions/upload-artifact@v4
        with: 
          name: reverse-proxy-image
          path: ./sonddr-reverse-proxy.tar

  push-webapp: 
    needs: build-webapp
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Get artifact
        uses: actions/download-artifact@v4
        with: 
          name: webapp-image
      - name: Load image
        run: docker load -i ./sonddr-webapp.tar
      - name: Login to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Tag
        run: docker tag sonddr-webapp ghcr.io/pmielle/sonddr-webapp:latest
      - name: Push
        run: docker push ghcr.io/pmielle/sonddr-webapp:latest

  push-api: 
    needs: build-api
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Get artifact
        uses: actions/download-artifact@v4
        with: 
          name: api-image
      - name: Load image
        run: docker load -i ./sonddr-api.tar
      - name: Login to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Tag
        run: docker tag sonddr-api ghcr.io/pmielle/sonddr-api:latest
      - name: Push
        run: docker push ghcr.io/pmielle/sonddr-api:latest

  push-auth: 
    needs: build-auth
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Get artifact
        uses: actions/download-artifact@v4
        with: 
          name: auth-image
      - name: Load image
        run: docker load -i ./sonddr-auth.tar
      - name: Login to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Tag
        run: docker tag sonddr-auth ghcr.io/pmielle/sonddr-auth:latest
      - name: Push
        run: docker push ghcr.io/pmielle/sonddr-auth:latest

  push-database: 
    needs: build-database
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Get artifact
        uses: actions/download-artifact@v4
        with: 
          name: database-image
      - name: Load image
        run: docker load -i ./sonddr-database.tar
      - name: Login to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Tag
        run: docker tag sonddr-database ghcr.io/pmielle/sonddr-database:latest
      - name: Push
        run: docker push ghcr.io/pmielle/sonddr-database:latest

  push-reverse-proxy: 
    needs: build-reverse-proxy
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Get artifact
        uses: actions/download-artifact@v4
        with: 
          name: reverse-proxy-image
      - name: Load image
        run: docker load -i ./sonddr-reverse-proxy.tar
      - name: Login to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Tag
        run: docker tag sonddr-reverse-proxy ghcr.io/pmielle/sonddr-reverse-proxy:latest
      - name: Push
        run: docker push ghcr.io/pmielle/sonddr-reverse-proxy:latest

  update:
    needs: [detect-changes, push-webapp, push-api, push-auth, push-database, push-reverse-proxy]
    # hack from: https://github.com/actions/runner/issues/491#issuecomment-850884422
    if: |
      always()
      && (needs.push-webapp.result == 'success' || needs.push-webapp.result == 'skipped')
      && (needs.push-api.result == 'success' || needs.push-api.result == 'skipped')
      && (needs.push-auth.result == 'success' || needs.push-auth.result == 'skipped')
      && (needs.push-database.result == 'success' || needs.push-database.result == 'skipped')
      && (needs.push-reverse-proxy.result == 'success' || needs.push-reverse-proxy.result == 'skipped')
      && ! (needs.push-webapp.result == 'skipped'
            && needs.push-api.result == 'skipped'
            && needs.push-auth.result == 'skipped'
            && needs.push-database.result == 'skipped'
            && needs.push-reverse-proxy.result == 'skipped'
            && needs.detect-changes.outputs.deployment == 'false')
    runs-on: ubuntu-latest
    steps:
      - uses: appleboy/ssh-action@v1.0.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script_stop: true
          script: |
            (cd /srv/sonddr && git pull)
            sudo docker compose -f /srv/sonddr/deployment/compose.yaml -f /srv/sonddr/deployment/compose-prod.yaml up --pull always --build -d
