volumes: 
  
  uploads:
    name: uploads

  mongo-data:
    name: mongo-data

  postgres-data:
    name: postgres-data

  prometheus-data:
    name: prometheus-data


services:

  # webapp
  # ---------------------------------------------
  webapp:
    container_name: webapp
    image: ghcr.io/pmielle/sonddr-webapp:latest
    restart: unless-stopped

  # api
  # ---------------------------------------------
  api: 
    container_name: api
    image: ghcr.io/pmielle/sonddr-api:latest
    depends_on: 
      - database
      - sessions-database
    env_file: 
      - ./.env
    volumes:
      - type: volume
        source: uploads
        target: /uploads
    restart: unless-stopped

  sessions-database:
    container_name: sessions-database
    image: redis
    restart: unless-stopped

  # auth
  # ---------------------------------------------
  auth:
    container_name: auth
    image: ghcr.io/pmielle/sonddr-auth:latest
    depends_on:
      - auth-database
    env_file: 
      - ./.env
    restart: unless-stopped

  auth-database:
    container_name: auth-database
    image: postgres
    env_file:
      - ./.env
    volumes:
      - type: volume
        source: postgres-data
        target: /var/lib/postgresql/data
    restart: unless-stopped

  # database
  # ---------------------------------------------
  database:
    container_name: database
    image: ghcr.io/pmielle/sonddr-database:latest
    extra_hosts: 
      database: 127.0.0.1
    volumes:
      - type: volume
        source: mongo-data
        target: /data/db
    restart: unless-stopped

  # reverse-proxy
  # ---------------------------------------------
  reverse-proxy:
    container_name: reverse-proxy
    image: ghcr.io/pmielle/sonddr-reverse-proxy:latest
    depends_on: 
      - webapp
      - api
      - auth
      - database
      - monitoring-database
    ports: 
      - "80:80"
      - "443:443"
    volumes:
      - type: bind
        source: /etc/letsencrypt/
        target: /etc/letsencrypt/
    restart: unless-stopped

  # monitoring
  # ---------------------------------------------
  docker-scraper:
    container_name: docker-scraper
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    privileged: true
    volumes: 
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    devices: 
      - /dev/kmsg:/dev/kmsg
    restart: unless-stopped

  monitoring-database:
    container_name: monitoring-database
    build:
      context: ../monitoring/database
    depends_on:
      - docker-scraper
    volumes: 
      - type: volume
        source: prometheus-data
        target: /prometheus
    restart: unless-stopped

  viewer:
    container_name: viewer
    build:
      context: ../monitoring/viewer
    env_file:
      - ./.env
    depends_on:
      - monitoring-database
    restart: unless-stopped
